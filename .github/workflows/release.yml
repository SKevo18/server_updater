name: Build and Release

on:
    release:
        types: [created]

jobs:
    build:
        name: Build binaries
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
                    - goos: linux
                      goarch: amd64
                      platform: linux-amd64
                    - goos: linux
                      goarch: arm64
                      platform: linux-arm64
                    - goos: windows
                      goarch: amd64
                      platform: windows-amd64
                      extension: .exe
                    - goos: windows
                      goarch: arm64
                      platform: windows-arm64
                      extension: .exe
                    - goos: darwin
                      goarch: amd64
                      platform: darwin-amd64
                    - goos: darwin
                      goarch: arm64
                      platform: darwin-arm64

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.24.3"

            - name: Build binary
              env:
                  GOOS: ${{ matrix.goos }}
                  GOARCH: ${{ matrix.goarch }}
              run: |
                  mkdir -p dist
                  go build -ldflags="-s -w" -o dist/server_updater-${{ matrix.platform }}${{ matrix.extension }} .

            - name: Upload binary to release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ./dist/server_updater-${{ matrix.platform }}${{ matrix.extension }}
                  asset_name: server_updater-${{ matrix.platform }}${{ matrix.extension }}
                  asset_content_type: application/octet-stream
